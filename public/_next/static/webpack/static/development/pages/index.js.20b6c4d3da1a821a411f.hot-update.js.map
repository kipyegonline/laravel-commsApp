{"version":3,"file":"static/webpack/static/development/pages/index.js.20b6c4d3da1a821a411f.hot-update.js","sources":["webpack:///./src/components/Nav.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport Router, { useRouter } from \"next/router\";\nimport NProgress from \"nprogress\";\nimport PropTypes from \"prop-types\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n  Fab,\n  IconButton,\n  AppBar,\n  Toolbar,\n  Link as MLink,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Close from \"@material-ui/icons/Close\";\nimport Home from \"@material-ui/icons/Home\";\nimport Users from \"@material-ui/icons/SupervisedUserCircleSharp\";\nimport Post from \"@material-ui/icons/PostAdd\";\nimport PostsIcons from \"@material-ui/icons/List\";\nimport Issues from \"@material-ui/icons/Info\";\nimport Departments from \"@material-ui/icons/BusinessCenter\";\nimport Exit from \"@material-ui/icons/ExitToApp\";\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport { removeAuth, useAuth } from \"../lib/api/users\";\n\nconst useStyles = makeStyles({\n  nav: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    padding: \".5rem\",\n\n    margin: 0,\n    \"@media (max-width:480px)\": {\n      flexDirection: \"column\",\n      width: \"100%\",\n      alignItems: \"center\",\n\n      transition: \"all .25s linear\",\n    },\n  },\n  navlink: {\n    cursor: \"pointer\",\n\n    display: \"block\",\n  },\n  active: {\n    borderBottom: \"2px solid red\",\n  },\n  menuButton: {\n    width: \"100%\",\n    outline: \"none\",\n    display: \"none\",\n    \"@media (max-width:480px)\": {\n      display: \"block\",\n    },\n  },\n});\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\nRouter.onRouteError = () => NProgress.done();\n\nconst NavBar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const classes = useStyles();\n  const { pathname } = useRouter();\n  const [isMobile, setMobile] = useState(false);\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleLogout = () => {\n    removeAuth();\n\n    location.reload();\n    Router.push(\"/login\");\n  };\n\n  return (\n    <AppBar color=\"transparent\" position=\"static\">\n      <div>\n        <IconButton\n          edge=\"end\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          size=\"medium\"\n          onClick={toggle}\n          className={classes.menuButton}\n        >\n          {isOpen ? <Close /> : <MenuIcon />}\n        </IconButton>\n      </div>\n\n      <div className={classes.nav}>\n        <Typography color=\"secondary\" variant=\"subtitle1\">\n          Mailtracker\n        </Typography>\n\n        <Typography\n          variant=\"body2\"\n          className={pathname === \"/\" ? classes.active : \"\"}\n        >\n          <Link href=\"/\">\n            <IconButton>\n              <Home />\n            </IconButton>\n          </Link>\n        </Typography>\n\n        <Typography\n          className={pathname === \"/posts\" ? classes.active : \"\"}\n          variant=\"body2\"\n        >\n          <Link href=\"/posts\">\n            <IconButton>\n              <PostsIcons />\n            </IconButton>\n            Posts\n          </Link>\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          className={pathname === \"/users\" ? classes.active : \"\"}\n        >\n          <Link href=\"/users\">\n            <IconButton>\n              <Users />\n            </IconButton>\n            Users\n          </Link>\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          className={pathname === \"/add-departments\" ? classes.active : \"\"}\n        >\n          <Link href=\"/add-departments\">\n            <IconButton>\n              <Departments />\n            </IconButton>\n            Departments\n          </Link>\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          className={pathname === \"/issues\" ? classes.active : \"\"}\n        >\n          <Link href=\"/issues\">\n            <IconButton>\n              <Issues />\n            </IconButton>\n            Issues\n          </Link>\n        </Typography>\n\n        <div>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            size=\"small\"\n            onClick={() => Router.push(\"/add-post\")}\n          >\n            Add post\n          </Button>\n        </div>\n        <Typography variant=\"title\">\n          <IconButton color=\"secondary\" size=\"small\" onClick={handleLogout}>\n            <Exit />\n          </IconButton>\n          log out\n        </Typography>\n      </div>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\nNavbar.propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  fixed: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // pass in custom element to use\n};\nNavbarBrand.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  // pass in custom element to use\n};\n\nconst MobileMenu = () => (\n  <div className={classes.navbarMobileTop}>\n    <div>\n      <IconButton\n        edge=\"end\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        size=\"medium\"\n        onClick={handleMenuIcon}\n      >\n        {isOpen ? <Close /> : <MenuIcon />}\n      </IconButton>\n    </div>\n    {isOpen ? (\n      <div className={classes.nav}>\n        <Typography className={pathname === \"/\" ? classes.active : \"\"}>\n          <Link href=\"/\">\n            <NavLink className={classes.navlink}>\n              <IconButton>\n                <Home />\n              </IconButton>\n            </NavLink>\n          </Link>\n        </Typography>\n\n        <Typography\n          className={pathname === \"/posts\" ? classes.active : \"\"}\n          variant=\"body2\"\n        >\n          <Link href=\"/posts\">\n            <NavLink className={classes.navlink}>\n              <IconButton>\n                <PostsIcons />\n              </IconButton>\n              Posts\n            </NavLink>\n          </Link>\n        </Typography>\n        <Typography className={pathname === \"/users\" ? classes.active : \"\"}>\n          <Link href=\"/users\">\n            <NavLink className={classes.navlink}>\n              <IconButton>\n                <Users />\n              </IconButton>\n              Users\n            </NavLink>\n          </Link>\n        </Typography>\n        <Typography\n          className={pathname === \"/add-departments\" ? classes.active : \"\"}\n        >\n          <Link href=\"/add-departments\">\n            <NavLink className={classes.navlink}>\n              <IconButton>\n                <Departments />\n              </IconButton>\n              Departments\n            </NavLink>\n          </Link>\n        </Typography>\n        <Typography className={pathname === \"/issues\" ? classes.active : \"\"}>\n          <Link href=\"/issues\">\n            <NavLink className={classes.navlink}>\n              <IconButton>\n                <Issues />\n              </IconButton>\n              Issues\n            </NavLink>\n          </Link>\n        </Typography>\n\n        <div>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => Router.push(\"/add-post\")}\n          >\n            Add post\n          </Button>\n        </div>\n        <Typography variant=\"title\">\n          <Link href=\"/issues\">\n            <NavLink className={classes.navlink}>\n              <IconButton color=\"secondary\" onClick={handleLogout}>\n                <Exit />\n              </IconButton>\n              log out\n            </NavLink>\n          </Link>\n        </Typography>\n      </div>\n    ) : null}\n  </div>\n);\n"],"mappings":"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","sourceRoot":""}